@import './variables.scss';

// Import Fonts
@import url('https://fonts.googleapis.com/css2?family=Montserrat&display=swap');
@import url('https://fonts.cdnfonts.com/css/brittany-signature');
@import url('https://fonts.cdnfonts.com/css/buffalo');

:root {
    background-color: $accent-clr;
    color: $base-color;

    font-family: var(--font, 'Montserrat', sans-serif);
}

// Custom Scrollbar
::-webkit-scrollbar {
    width: $scroll-bar-width;
    height: 100%;

    // border-radius: 25px;

    transition: all 500ms ease-in-out;
}
 
// Track
::-webkit-scrollbar-track {
    background: #f1f1f1;
}

// Handle
::-webkit-scrollbar-thumb {
    background: #999; 

    border-radius: 25px;

    transition: background-color 500ms ease-in;
}

// Handle on hover
::-webkit-scrollbar-thumb:hover {
    background-color: #bbb;
    transition: background-color 500ms ease-out;
}

html {
    min-width: calc(100dvw - $scroll-bar-width);
    min-height: 100%;
    scroll-behavior: smooth;
}

.fullHeight:not(body > *.fullHeight, .hero.fullHeight) {
    height: 100% !important;
}

body {
    display: flex;
    flex-direction: column;
    margin: 0;//10;
    width: 100%;
    min-height: 100%;
    // display: flex;
    // flex-direction: column;
}

input, textarea, select {
    font: inherit;
    line-height: inherit;
}

.vHr {
    background-color: $base-color;

    width: 2px;
    height: var(--height);
    border-radius: 25px;
}

.hHr {
    background-color: var(--b-color, $base-color);

    display: block;
    margin: var(--marg, 0);
    width: var(--width, 100%);
    height: 2px;
    border-radius: 25px;
}

h1, h2, h3, h4, h5, h6 {
    --font: 'Dekko', sans-serif;
    line-height: 100%;

    &:first-child {
        text-align: center;
    }
}

h1, h2, h3, h4, h5, h6, p, ul, ol {
    &:first-child {
        margin-top: 0;
    }
    &:last-child {
        margin-bottom: 0;
    }
}

h1:first-child { font-size: 2em }
h2:first-child { font-size: 1.5em }
h3:first-child { font-size: 1.17em }
h4:first-child { font-size: 1em }
h5:first-child { font-size: 0.83em }
h6:first-child { font-size: 0.67em }

button, [type="submit"], [type="button"] {
    margin: inherit;
    padding: inherit;
    border: inherit;

    font: inherit;
}

.btn, button, [type="submit"], [type="button"] {
    // min-height: 30px;
    // max-height: 50px;

    text-decoration: none;
    
    border: 1px solid var(--border-color);
    border-radius: 99rem;

    padding: 0.75rem 2rem;
    box-shadow: 0px 3px 29px 0px rgba(0, 0, 0, 0.06);

    &[transition] {
        transition: 0.25s ease-in-out;
    }

    display: flex;
    text-align: center;
    justify-content: center;
    align-items: center;

    &:not(.primary) {
        background-color: $base-color;
        --border-color: $text-color;
        color: $text-color;

        &:is(:hover, :focus-visible) {
            background-color: $text-color;
            --border-color: $base-color;
            color: $base-color;
        }
    }
    &.primary {
        background-color: $text-color;
        --border-color: $base-color;
        color: $base-color;

        &:is(:hover, :focus-visible) {
            background-color: $base-color;
            --border-color: $text-color;  
            color: $text-color;
        }
    }
}

input[type=text], input[type=email], select, textarea {
    width: 350px;
    padding: 10px;
    border: 1px solid #aaa;
    border-radius: 4px;
}

a[onclick], :is(button, [type="submit"], [type="button"])[onclick], img[onclick] {
    cursor: pointer;
}

a, button, [type="submit"], [type="button"] {
    line-height: 1;
}

img, video, audio, media, iframe, object {
    max-width: 100%;
    max-height: 100%;
}


.main {
    flex: 1;

    > section:not(.split) {
        background-color: $base-color;
        color: $text-color;
    }

    > * {
        margin-inline: auto;
    }
}
:is(.main:not(:empty), .main > :is(section:not(.split), section.split > section)) {
    box-sizing: border-box;
    padding: $default-padding;
}

.empty-secton {
    min-height: 500px;
}

.split {
    display: grid;
    grid-template-columns: repeat(var(--cols, 2), 1fr);
    grid-template-rows: repeat(var(--rows, 1), 1fr);
}

.banner {
    // &__parent {

    // }
    &__image {
        object-fit: cover;
        object-position: center;
    }
}

.list {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: calc($default-padding / 2);

    & > a {
        width: fit-content;
    }
}